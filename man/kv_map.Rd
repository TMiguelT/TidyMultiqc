% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util.R
\name{kv_map}
\alias{kv_map}
\title{Maps over the keys and values of a vector, but expects the function to return
a named vector with "key" and "value" entries. These will become the names
and values of the final vector. Think of this as like a Python dictionary
comprehension: it takes an iterable and produces a dictionary.}
\usage{
kv_map(l, func, map_keys = F)
}
\arguments{
\item{l}{a vector to map over}

\item{func}{the function to apply over that vector, which must return a `list(key=?, value=?)`}

\item{map_keys}{logical. If TRUE, then use `imap` which provides the keys as the second element to the function}
}
\description{
Maps over the keys and values of a vector, but expects the function to return
a named vector with "key" and "value" entries. These will become the names
and values of the final vector. Think of this as like a Python dictionary
comprehension: it takes an iterable and produces a dictionary.
}
\examples{
c(1, 2, 3) \%>\% kv_map(~ list(key = letters[[.]], value = .))
c(1, 2, 3) \%>\% kv_map(function(x) {
  list(key = letters[[x]], value = x)
})
c(a = 1, b = 2, c = 3) \%>\% kv_map(~ list(key = str_c(.y, "Â²"), value = .x), map_keys = T)
}
